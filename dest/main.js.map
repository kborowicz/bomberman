{"version":3,"file":"main.js","mappings":"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;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://bomberman/./src/game/assets/bricks.png","webpack://bomberman/./src/game/assets/dynamite.png","webpack://bomberman/./src/game/assets/explosion/explosion.png","webpack://bomberman/./src/game/assets/grass.png","webpack://bomberman/./src/game/assets/stone.png","webpack://bomberman/./src/game/assets/wall.png","webpack://bomberman/./src/index.scss","webpack://bomberman/./src/game/Game.ts","webpack://bomberman/./src/game/GameContext.ts","webpack://bomberman/./src/game/Resources.ts","webpack://bomberman/./src/game/board/Board.ts","webpack://bomberman/./src/game/board/BoardCell.ts","webpack://bomberman/./src/game/board/BoardCellsTree.ts","webpack://bomberman/./src/game/board/PathFinder.ts","webpack://bomberman/./src/game/collision/BoundingBox.ts","webpack://bomberman/./src/game/collision/Point.ts","webpack://bomberman/./src/game/entity/Entity.ts","webpack://bomberman/./src/game/entity/actors/Actor.ts","webpack://bomberman/./src/game/entity/actors/Player.ts","webpack://bomberman/./src/game/entity/actors/enemies/BatEnemy.ts","webpack://bomberman/./src/game/entity/actors/enemies/Enemy.ts","webpack://bomberman/./src/game/entity/actors/enemies/Movement.ts","webpack://bomberman/./src/game/entity/blocks/Block.ts","webpack://bomberman/./src/game/entity/blocks/BlockFactory.ts","webpack://bomberman/./src/game/entity/blocks/Bricks.ts","webpack://bomberman/./src/game/entity/blocks/Grass.ts","webpack://bomberman/./src/game/entity/blocks/Wall.ts","webpack://bomberman/./src/game/loader/AssetsLoader.ts","webpack://bomberman/./src/game/loader/LevelLoader.ts","webpack://bomberman/./src/index.ts","webpack://bomberman/webpack/bootstrap","webpack://bomberman/webpack/runtime/chunk loaded","webpack://bomberman/webpack/runtime/compat get default export","webpack://bomberman/webpack/runtime/define property getters","webpack://bomberman/webpack/runtime/global","webpack://bomberman/webpack/runtime/hasOwnProperty shorthand","webpack://bomberman/webpack/runtime/make namespace object","webpack://bomberman/webpack/runtime/node module decorator","webpack://bomberman/webpack/runtime/publicPath","webpack://bomberman/webpack/runtime/jsonp chunk loading","webpack://bomberman/webpack/before-startup","webpack://bomberman/webpack/startup","webpack://bomberman/webpack/after-startup"],"sourcesContent":["export default __webpack_public_path__ + \"bricks.png\";","export default __webpack_public_path__ + \"dynamite.png\";","export default __webpack_public_path__ + \"explosion.png\";","export default __webpack_public_path__ + \"grass.png\";","export default __webpack_public_path__ + \"stone.png\";","export default __webpack_public_path__ + \"wall.png\";","// extracted by mini-css-extract-plugin\nexport default {};","import level2 from './assets/levels/level2.json';\r\nimport BatEnemy from './entity/actors/enemies/BatEnemy';\r\nimport GameContext from './GameContext';\r\nimport LevelLoader, { ILevelDefinition } from './loader/LevelLoader';\r\nimport Resources from './Resources';\r\nimport RingBomb from './weapons/RingBomb';\r\n\r\nexport default class Game {\r\n\r\n    private _context: GameContext;\r\n\r\n    public constructor() {\r\n        this.run();\r\n    }\r\n\r\n    public get context(): GameContext {\r\n        return this._context;\r\n    }\r\n\r\n    private async run() {\r\n        await Resources.initialize();\r\n        this._context = new GameContext();\r\n\r\n        LevelLoader.load(level2 as ILevelDefinition, this._context);\r\n\r\n        const { app, board } = this._context;\r\n        document.getElementById('root').append(app.view);\r\n\r\n        app.screen.width = board.renderable.width;\r\n        app.screen.height = board.renderable.height;\r\n\r\n        app.view.width = app.screen.width;\r\n        app.view.height = app.screen.height;\r\n\r\n        // const ringBomb = new RingBomb(this.context);\r\n        // ringBomb.spawnAt(board.getCellAt(7, 7));\r\n\r\n        const p = new BatEnemy(this.context);\r\n        p.setPosition(13, 13);\r\n        p.goTo(1, 1);\r\n\r\n        setTimeout(() => {\r\n            p.goTo(13, 1);\r\n        }, 2221);\r\n\r\n        this.context.addObject(p);\r\n    }\r\n\r\n}","import { Application, DisplayObject } from 'pixi.js';\r\nimport Board from './board/Board';\r\nimport Actor from './entity/actors/Actor';\r\nimport Player from './entity/actors/Player';\r\nimport { Renderable } from './Renderable';\r\n\r\nexport default class GameContext {\r\n\r\n    public readonly app: Application;\r\n    public readonly board: Board;\r\n\r\n    public readonly actors: Actor[] = [];\r\n    public readonly player: Player;\r\n\r\n    public constructor() {\r\n        this.app = new Application({\r\n            backgroundColor: 0x3d3d3d\r\n        });\r\n\r\n        this.board = new Board(this);\r\n        this.player = new Player(this);\r\n        this.actors.push(this.player);\r\n\r\n        this.addObject(this.board);\r\n        this.addObject(this.player);\r\n    }\r\n\r\n    public get ticker() {\r\n        return this.app.ticker;\r\n    }\r\n\r\n    public get cellSize() {\r\n        return this.board.cellSize;\r\n    }\r\n\r\n    public get stage() {\r\n        return this.app.stage;\r\n    }\r\n\r\n    public addObject(object: Renderable | DisplayObject) {\r\n        if ((object as Renderable).renderable) {\r\n            this.app.stage.addChild(object.renderable as DisplayObject);\r\n        } else {\r\n            this.app.stage.addChild(object as DisplayObject);\r\n        }\r\n    }\r\n\r\n}","import { Spritesheet, Texture } from 'pixi.js';\r\nimport explosionAtlasData from './assets/explosion/explosion.json';\r\nimport explosionAtlas from './assets/explosion/explosion.png';\r\nimport grassImg from './assets/grass.png';\r\nimport wallImg from './assets/wall.png';\r\nimport woodImg from './assets/dynamite.png';\r\nimport stoneImg from './assets/stone.png';\r\nimport brickImg from './assets/bricks.png';\r\nimport { loadSpritesheet, loadTexture } from './loader/AssetsLoader';\r\n\r\nexport default class Resources {\r\n\r\n    public static GRASS_TEXTURE: Texture;\r\n    public static WALL_TEXTURE: Texture;\r\n    public static WOOD_TEXTURE: Texture;\r\n    public static STONE_TEXTURE: Texture;\r\n    public static BRICK_TEXTURE: Texture;\r\n    public static EXPLOSION_SPRITESHEET: Spritesheet;\r\n\r\n    public static async initialize() {\r\n        this.GRASS_TEXTURE = loadTexture(grassImg);\r\n        this.WALL_TEXTURE = loadTexture(wallImg);\r\n        this.WOOD_TEXTURE = loadTexture(woodImg);\r\n        this.STONE_TEXTURE = loadTexture(stoneImg);\r\n        this.BRICK_TEXTURE = loadTexture(brickImg);\r\n        this.EXPLOSION_SPRITESHEET = await loadSpritesheet(explosionAtlas, explosionAtlasData);\r\n    }\r\n\r\n}","import { Container } from 'pixi.js';\r\nimport BoundingBox from '../collision/BoundingBox';\r\nimport { CollisionTest } from '../collision/CollisionTest';\r\nimport Block from '../entity/blocks/Block';\r\nimport GameContext from '../GameContext';\r\nimport { Renderable } from '../Renderable';\r\nimport { BoardCell } from './BoardCell';\r\nimport BoardCellsTree from './BoardCellsTree';\r\nimport PathFinder from './PathFinder';\r\n\r\nexport interface IBoardProps {\r\n    cellSize?: number\r\n}\r\n\r\nexport default class Board implements Renderable, CollisionTest {\r\n\r\n    private readonly cellsContainer: Container;\r\n\r\n    public readonly context: GameContext;\r\n    public readonly pathFinder: PathFinder;\r\n    public readonly cellsTree: BoardCellsTree;\r\n    public readonly cellSize = 40;\r\n\r\n    public constructor(context: GameContext) {\r\n        this.context = context;\r\n        this.pathFinder = new PathFinder();\r\n        this.cellsContainer = new Container();\r\n        this.cellsTree = new BoardCellsTree(\r\n            cell => this.cellsContainer.addChild(cell.renderable),\r\n            cell => this.cellsContainer.removeChild(cell.renderable)\r\n        );\r\n    }\r\n\r\n    public get renderable() {\r\n        return this.cellsContainer;\r\n    }\r\n\r\n    public testCollision(bbox: BoundingBox): boolean {\r\n        return this.cellsTree.testCollision(bbox);\r\n    }\r\n\r\n    public getCellAt(col: number, row: number): BoardCell {\r\n        return this.cellsTree.getCellAt(col, row);\r\n    }\r\n\r\n    public addCell(col: number, row: number, block: Block): BoardCell {\r\n        const cell = new BoardCell(col, row, block, this);\r\n        cell.block.renderable.x = col * this.cellSize;\r\n        cell.block.renderable.y = row * this.cellSize;\r\n        cell.block.renderable.width = this.cellSize;\r\n        cell.block.renderable.height = this.cellSize;\r\n\r\n        this.cellsContainer.addChild(cell.block.renderable);\r\n        this.cellsTree.addCell(cell);\r\n\r\n        return cell;\r\n    }\r\n\r\n    public getShortestPath(c0: BoardCell, c1: BoardCell) {\r\n        return this.pathFinder.find(c0, c1);\r\n    }\r\n\r\n}","import { Container } from 'pixi.js';\r\nimport { HasBoundingBox } from '../collision/HasBoundingBox';\r\nimport Block from '../entity/blocks/Block';\r\nimport Grass from '../entity/blocks/Grass';\r\nimport { Renderable } from '../Renderable';\r\nimport Board from './Board';\r\n\r\nexport class BoardCell implements Renderable, HasBoundingBox {\r\n\r\n    public readonly board: Board;\r\n    public readonly col: number;\r\n    public readonly row: number;\r\n\r\n    protected _block: Block;\r\n\r\n    public constructor(col: number, row: number, block: Block, board: Board) {\r\n        this.board = board;\r\n        this.col = col;\r\n        this.row = row;\r\n        this._block = block;\r\n    }\r\n\r\n    public get neighbors(): BoardCell[] {\r\n        return [\r\n            this.board.getCellAt(this.col - 0, this.row - 1),\r\n            // this.board.getCellAt(this.col - 1, this.row - 1),\r\n            this.board.getCellAt(this.col - 1, this.row - 0),\r\n            // this.board.getCellAt(this.col - 1, this.row + 1),\r\n            this.board.getCellAt(this.col - 0, this.row + 1),\r\n            // this.board.getCellAt(this.col + 1, this.row + 1),\r\n            this.board.getCellAt(this.col + 1, this.row - 0),\r\n            // this.board.getCellAt(this.col + 1, this.row - 1),\r\n        ].filter(cell => !!cell);\r\n    }\r\n\r\n    public get renderable() {\r\n        return this._block.renderable;\r\n    }\r\n\r\n    public get bbox() {\r\n        return this._block.bbox;\r\n    }\r\n\r\n    public get hash() {\r\n        return this.col + '#' + this.row;\r\n    }\r\n\r\n    public get isWall() {\r\n        return this._block.isWall;\r\n    }\r\n\r\n    public get isDestroyable() {\r\n        return this._block.isDestroyable;\r\n    }\r\n\r\n    public get block() {\r\n        return this._block;\r\n    }\r\n\r\n    public set block(value: Block) {\r\n        if (value === this._block) {\r\n            return;\r\n        }\r\n\r\n        if (this._block) {\r\n            this._block.renderable.destroy();\r\n        }\r\n\r\n        if (!value) {\r\n            value = new Grass(this.board.context);\r\n        }\r\n\r\n        value.renderable.x = this.col * this.board.cellSize;\r\n        value.renderable.y = this.row * this.board.cellSize;\r\n        value.renderable.width = this.board.cellSize;\r\n        value.renderable.height = this.board.cellSize;\r\n\r\n        this._block = value;\r\n        this.board.context.addObject(this._block);\r\n    }\r\n\r\n    public setAsDefault() {\r\n        this.block = null;\r\n    }\r\n\r\n    public alignObject(object: Container) {\r\n        const cellSize = this.board.cellSize;\r\n        const x0 = this.col * cellSize;\r\n        const y0 = this.row * cellSize;\r\n\r\n        const w = object.width;\r\n        const h = object.height;\r\n\r\n        object.x = x0 + (cellSize - w) / 2;\r\n        object.y = y0 + (cellSize - h) / 2;\r\n    }\r\n\r\n}","import RBush from 'rbush';\r\nimport BoundingBox from '../collision/BoundingBox';\r\nimport { CollisionTest } from '../collision/CollisionTest';\r\nimport { BoardCell } from './BoardCell';\r\n\r\ntype OnCellAddListener = (cell: BoardCell) => void;\r\ntype OnCellRemoveListener = (cell: BoardCell) => void;\r\n\r\nexport default class BoardCellsTree implements CollisionTest {\r\n\r\n    private cellsTree: Tree = new Tree();\r\n    private cellsMap: Map<string, BoardCell> = new Map();\r\n    private onCellAddListener: OnCellAddListener;\r\n    private onCellRemoveListener: OnCellRemoveListener;\r\n\r\n    public constructor(\r\n        onAddListener: OnCellAddListener,\r\n        onRemoveListener: OnCellRemoveListener\r\n    ) {\r\n        this.onCellAddListener = onAddListener;\r\n        this.onCellRemoveListener = onRemoveListener;\r\n    }\r\n\r\n    public testCollision(bbox: BoundingBox): boolean {\r\n        return !!this.findIntersection(bbox).find(cell => {\r\n            if (cell.isWall) {\r\n                const f1 = bbox.intersectionFactorX(cell.bbox);\r\n                const f2 = bbox.intersectionFactorY(cell.bbox);\r\n\r\n                console.log(f1, f2)\r\n\r\n                return (f1 > 0.01 && f2 > 0.01);\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public findIntersection(bbox: BoundingBox): BoardCell[] {\r\n        const { x0, y0, x1, y1 } = bbox;\r\n\r\n        return this.cellsTree.search({\r\n            minX: x0, minY: y0,\r\n            maxX: x1, maxY: y1\r\n        });\r\n    }\r\n\r\n    public getCellAt(col: number, row: number) {\r\n        return this.cellsMap.get(this.getMapKey(col, row));\r\n    }\r\n\r\n    public addCell(cell: BoardCell) {\r\n        const { row, col } = cell;\r\n        const key = this.getMapKey(col, row);\r\n\r\n        if (this.cellsMap.has(key)) {\r\n            const oldCell = this.cellsMap.get(key);\r\n            this.cellsTree.remove(oldCell);\r\n            this.onCellRemoveListener(oldCell);\r\n        }\r\n\r\n        this.cellsMap.set(key, cell);\r\n        this.cellsTree.insert(cell);\r\n        this.onCellAddListener(cell);\r\n    }\r\n\r\n    public getNonWallCells() {\r\n        return [...this.cellsMap.values()].filter(cell => !cell.isWall);\r\n    }\r\n\r\n    private getMapKey(col: number, row: number) {\r\n        return col + '#' + row;\r\n    }\r\n\r\n}\r\n\r\nclass Tree extends RBush<BoardCell> {\r\n\r\n    public toBBox(cell: BoardCell) {\r\n        const { x0, y0, x1, y1 } = cell.bbox;\r\n\r\n        return { minX: x0, minY: y0, maxX: x1, maxY: y1 };\r\n    }\r\n\r\n    public compareMinX(a: BoardCell, b: BoardCell): number {\r\n        return a.bbox.p1.x - b.bbox.p1.x;\r\n    }\r\n\r\n    public compareMinY(a: BoardCell, b: BoardCell): number {\r\n        return a.bbox.p2.x - b.bbox.p2.x;\r\n    }\r\n\r\n}","\r\nimport Heap from 'heap';\r\nimport { BoardCell } from './BoardCell';\r\n\r\nexport default class PathFinder {\r\n\r\n    public find(c0: BoardCell, c1: BoardCell): Path {\r\n        const heap = new Heap<Node>((a, b) => a.fscore - b.fscore);\r\n        const nodes = new Map<string, Node>();\r\n\r\n        const startNode = new Node(c0);\r\n        startNode.gscore = 0;\r\n        startNode.fscore = 0;\r\n        startNode.opened = true;\r\n\r\n        heap.push(startNode);\r\n        nodes.set(startNode.cell.hash, startNode);\r\n\r\n        while (!heap.empty()) {\r\n            const currentNode = heap.pop();\r\n            currentNode.closed = true;\r\n\r\n            if (currentNode.cell == c1) {\r\n                const backtrace = currentNode.backtrace();\r\n                return new Path(backtrace.map(node => node.cell));\r\n            }\r\n\r\n            currentNode.cell.neighbors.forEach(neighborCell => {\r\n                const neighborNode = nodes.get(neighborCell.hash) ?? new Node(neighborCell);\r\n\r\n                if (!nodes.has(neighborCell.hash)) {\r\n                    nodes.set(neighborCell.hash, neighborNode);\r\n                }\r\n\r\n                if (neighborNode.closed || neighborCell.isWall) {\r\n                    return;\r\n                }\r\n\r\n                const x1 = currentNode.cell.col;\r\n                const y1 = currentNode.cell.row;\r\n\r\n                const x2 = neighborCell.col;\r\n                const y2 = neighborCell.row;\r\n\r\n                // get the distance between current node and the neighbor\r\n                // and calculate the next g score\r\n                const cost = (x2 - x1 === 0 || y2 - y1 === 0) ? 1 : Math.SQRT2;\r\n                const ngscore = currentNode.gscore + cost;\r\n\r\n                if (!neighborNode.opened || ngscore < neighborNode.gscore) {\r\n                    neighborNode.gscore = ngscore;\r\n                    neighborNode.fscore = ngscore + this.heuristic(neighborCell, c1);\r\n                    neighborNode.parent = currentNode;\r\n\r\n                    if (!neighborNode.opened) {\r\n                        heap.push(neighborNode);\r\n                        neighborNode.opened = true;\r\n                    } else {\r\n                        heap.updateItem(neighborNode);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        console.log('error');\r\n    }\r\n\r\n    private heuristic(c0: BoardCell, c1: BoardCell) {\r\n        // Manhattan distance\r\n        const d1 = Math.abs(c1.col - c0.col);\r\n        const d2 = Math.abs(c1.row - c0.row);\r\n\r\n        return (d1 + d2);\r\n        return (c1.col - c0.col) ** 2 + (c1.row - c0.row) ** 2;\r\n    }\r\n\r\n}\r\n\r\nclass Node {\r\n    \r\n    public readonly cell: BoardCell;\r\n\r\n    public parent: Node;\r\n\r\n    public opened = false;\r\n    public closed = false;\r\n\r\n    public gscore: number;\r\n    public fscore: number;\r\n\r\n    public constructor(cell: BoardCell) {\r\n        this.cell = cell;\r\n    }\r\n\r\n    public backtrace(): Node[] {\r\n        const backtrace: Node[] = [this];\r\n        let currentNode: Node = this.parent;\r\n\r\n        while (currentNode) {\r\n            backtrace.push(currentNode);\r\n            currentNode = currentNode.parent;\r\n        }\r\n\r\n        return backtrace.reverse();\r\n    }\r\n\r\n}\r\n\r\nexport class Path {\r\n\r\n    public readonly cells: readonly BoardCell[];\r\n    public readonly points: readonly BoardCell[];\r\n\r\n    public constructor(cells: BoardCell[]) {\r\n        this.cells = cells;\r\n        this.points = this.getPoints(cells);\r\n    }\r\n\r\n    private getPoints(cells: BoardCell[]): BoardCell[] {\r\n        const cellsCopy = [...cells];\r\n        const points: BoardCell[] = [cellsCopy[0]];\r\n\r\n        for (let i = 1; i < cellsCopy.length - 1; i++) {\r\n            const prevCell = cellsCopy[i - 1];\r\n            const currCell = cellsCopy[i + 0];\r\n            const nextCell = cellsCopy[i + 1];\r\n\r\n            // Find corners\r\n            const dc1 = Math.abs(currCell.col - prevCell.col) == 1;\r\n            const dr1 = Math.abs(currCell.row - prevCell.row) == 1;\r\n            \r\n            const dc2 = Math.abs(nextCell.col - currCell.col) == 1;\r\n            const dr2 = Math.abs(nextCell.row - currCell.row) == 1;\r\n\r\n            if (dc1 && dr2 || dc2 && dr1) {\r\n                points.push(currCell);\r\n            }\r\n        }\r\n\r\n        points.push(cellsCopy.pop());\r\n\r\n        return points;\r\n    }\r\n\r\n}","import { CollisionTest } from './CollisionTest';\r\nimport Point from './Point';\r\n\r\nexport default class BoundingBox implements CollisionTest {\r\n\r\n    public readonly p1: Point;\r\n    public readonly p2: Point;\r\n\r\n    public constructor(p1: Point, p2: Point) {\r\n        this.p1 = p1;\r\n        this.p2 = p2;\r\n    }\r\n\r\n    public get x0() {\r\n        return this.p1.x;\r\n    }\r\n\r\n    public get y0() {\r\n        return this.p1.y;\r\n    }\r\n\r\n    public get x1() {\r\n        return this.p2.x;\r\n    }\r\n\r\n    public get y1() {\r\n        return this.p2.y;\r\n    }\r\n\r\n    public get cx() {\r\n        return (this.x0 + this.x1) / 2;\r\n    }\r\n\r\n    public get cy() {\r\n        return (this.y0 + this.y1) / 2;\r\n    }\r\n\r\n    public shift(dx: number, dy: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return BoundingBox.fromCoords(x0 + dx, y0 + dy, x1 + dx, y1 + dy);\r\n    }\r\n\r\n    public shiftX(dx: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return BoundingBox.fromCoords(x0 + dx, y0, x1 + dx, y1);\r\n    }\r\n\r\n    public shiftY(dy: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return BoundingBox.fromCoords(x0, y0 + dy, x1, y1 + dy);\r\n    }\r\n\r\n    public testCollision(bbox: BoundingBox): boolean {\r\n        // If one rectangle is on left side of other\r\n        if (this.p1.x > bbox.p2.x || bbox.p1.x > this.p2.x) {\r\n            return false;\r\n        }\r\n\r\n        // If one rectangle is above other\r\n        if (this.p2.y > bbox.p1.y || bbox.p2.y > this.p1.y) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public intersectionFactorX(bbox: BoundingBox): number {\r\n        const r1x1 = this.p1.x;\r\n        const r1x2 = this.p2.x;\r\n        const r2x1 = bbox.p1.x;\r\n        const r2x2 = bbox.p2.x;\r\n\r\n        if (r2x1 >= r1x2 || r1x1 >= r2x2) {\r\n            return 0;\r\n        } else {\r\n            if (r2x1 > r1x2) {\r\n                return r2x1 - r1x2;\r\n            } else {\r\n                return r1x1 - r2x2;\r\n            }\r\n        }\r\n    }\r\n\r\n    public intersectionFactorY(bbox: BoundingBox): number {\r\n        const r1y1 = this.p1.y;\r\n        const r1y2 = this.p2.y;\r\n        const r2y1 = bbox.p1.y;\r\n        const r2y2 = bbox.p2.y;\r\n\r\n        if (r2y1 >= r1y2 || r1y1 >= r2y2) {\r\n            return 0;\r\n        } else {\r\n            if (r2y1 > r1y2) {\r\n                return r2y1 - r1y2;\r\n            } else {\r\n                return r1y1 - r2y2;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static fromCoords(x0: number, y0: number, x1: number, y1: number) {\r\n        return new BoundingBox(new Point(x0, y0), new Point(x1, y1));\r\n    }\r\n\r\n    public static fromDims(x0: number, y0: number, w: number, h: number) {\r\n        return new BoundingBox(new Point(x0, y0), new Point(x0 + w, y0 + h));\r\n    }\r\n\r\n}","export default class Point {\r\n\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n}","import { Container, DisplayObject } from 'pixi.js';\r\nimport { BoardCell } from '../board/BoardCell';\r\nimport BoundingBox from '../collision/BoundingBox';\r\nimport { HasBoundingBox } from '../collision/HasBoundingBox';\r\nimport GameContext from '../GameContext';\r\nimport { Renderable } from '../Renderable';\r\n\r\nexport default abstract class Entity<\r\n    T extends Container = Container\r\n> implements Renderable<T>, HasBoundingBox {\r\n\r\n    public readonly context: GameContext;\r\n\r\n    public constructor(context: GameContext) {\r\n        this.context = context;\r\n    }\r\n\r\n    public get bbox() {\r\n        const { x, y, width, height } = this.renderable;\r\n        return BoundingBox.fromDims(x, y, width, height);\r\n    }\r\n\r\n    public abstract get renderable(): T;\r\n\r\n}","import { BoardCell } from '@/game/board/BoardCell';\r\nimport { Container } from 'pixi.js';\r\nimport Entity from '../Entity';\r\n\r\nexport default abstract class Actor<\r\n    T extends Container = Container\r\n    > extends Entity<T> {\r\n\r\n    // TODO eventy:\r\n\r\n    private prevCell: BoardCell;\r\n\r\n    protected _speed = 2;\r\n    protected _health = 100;\r\n\r\n    public get speed(): number {\r\n        return this._speed;\r\n    }\r\n\r\n    public set speed(value: number) {\r\n        this._speed = value;\r\n    }\r\n\r\n    public get nearestCell() {\r\n        const board = this.context.board;\r\n        const cellSize = board.cellSize;\r\n        const { cx, cy } = this.bbox; //TODO jak to ogarnac zeby dzialalo poruszanie\r\n\r\n        return board.getCellAt(\r\n            Math.floor(cx / cellSize),\r\n            Math.floor(cy / cellSize)\r\n        );\r\n    }\r\n\r\n    public setPosition(col: number, row: number): void;\r\n    public setPosition(cell: BoardCell): void;\r\n    public setPosition(arg1: number | BoardCell, arg2?: number): void {\r\n        let cell: BoardCell;\r\n\r\n        if (typeof arg1 === 'number') {\r\n            cell = this.context.board.getCellAt(arg1, arg2);\r\n        } else {\r\n            cell = arg1;\r\n        }\r\n\r\n        if (!cell.isWall) {\r\n            cell.alignObject(this.renderable);\r\n        }\r\n    }\r\n\r\n    public move(dx: number, dy: number) {\r\n        const board = this.context.board;\r\n        const bbox = this.bbox;\r\n\r\n        let newX = this.renderable.x;\r\n        let newY = this.renderable.y;\r\n\r\n        if (this.nearestCell != this.prevCell) {\r\n            console.log(this.nearestCell);\r\n            this.prevCell = this.nearestCell;\r\n        }\r\n\r\n        if (dx != 0) {\r\n            const shiftedBbox = bbox.shiftX(dx);\r\n\r\n            if (!board.testCollision(shiftedBbox)) {\r\n                newX = shiftedBbox.x0;\r\n            } else {\r\n                // const dirx = Math.sign(dx);\r\n\r\n                // if (dirx > 0) {\r\n                //     const row = Math.round(this.sprite.x / board.cellSize);\r\n                // } else {\r\n                //     const row = Math.round(this.sprite.x / board.cellSize);\r\n                // }\r\n            }\r\n        }\r\n\r\n        if (dy != 0) {\r\n            const shiftedBbox = bbox.shiftY(dy);\r\n\r\n            if (!board.testCollision(shiftedBbox)) {\r\n                newY = shiftedBbox.y0;\r\n            } else {\r\n                // const diry = Math.sign(dy);\r\n            }\r\n        }\r\n\r\n        this.renderable.x = newX;\r\n        this.renderable.y = newY;\r\n    }\r\n\r\n}","import GameContext from '@/game/GameContext';\r\nimport { Sprite } from 'pixi.js';\r\nimport Resources from '../../Resources';\r\nimport Actor from './Actor';\r\n\r\nexport default class Player extends Actor {\r\n\r\n    private _sprite: Sprite;\r\n\r\n    public constructor(context: GameContext) {\r\n        super(context);\r\n        this._sprite = Sprite.from(Resources.WOOD_TEXTURE);\r\n        this._sprite.width = this.context.cellSize;\r\n        this._sprite.height = this.context.cellSize;\r\n    }\r\n\r\n    public get speed(): number {\r\n        return 4;\r\n    }\r\n\r\n    public get renderable() {\r\n        return this._sprite;\r\n    }\r\n\r\n}","import GameContext from '@/game/GameContext';\r\nimport { Container, Sprite } from 'pixi.js';\r\nimport Resources from '../../../Resources';\r\nimport Enemy from './Enemy';\r\n\r\nexport default class BatEnemy extends Enemy {\r\n\r\n    private _sprite: Sprite;\r\n\r\n    public constructor(context: GameContext) {\r\n        super(context);\r\n        this._sprite = Sprite.from(Resources.WOOD_TEXTURE);\r\n        this._sprite.width = this.context.cellSize;\r\n        this._sprite.height = this.context.cellSize;\r\n    }\r\n\r\n    public get renderable(): Container {\r\n        return this._sprite;\r\n    }\r\n\r\n}","import { Container, Sprite } from 'pixi.js';\r\nimport { BoardCell } from '../../../board/BoardCell';\r\nimport Actor from '../Actor';\r\nimport Movement from './Movement';\r\n\r\nexport default abstract class Enemy<\r\n    T extends Container = Container\r\n> extends Actor<T> {\r\n\r\n    protected currentMovement: Movement;\r\n\r\n    public goTo(col: number, row: number): Movement;\r\n    public goTo(dest: BoardCell): Movement;\r\n    public goTo(arg1: number | BoardCell, arg2?: number): Movement {\r\n        if (this.currentMovement) {\r\n            this.currentMovement.cancel();\r\n\r\n            //TODO gładka zmiana ruchów\r\n        }\r\n\r\n        let newMovement: Movement;\r\n\r\n        if (typeof arg1 === 'number') {\r\n            newMovement = new Movement(this, this.context.board.getCellAt(arg1, arg2));\r\n        } else {\r\n            newMovement = new Movement(this, arg1);\r\n        }\r\n\r\n        this.currentMovement = newMovement;\r\n\r\n        return newMovement;\r\n    }\r\n\r\n}","import { BoardCell } from '../../../board/BoardCell';\r\nimport BoundingBox from '../../../collision/BoundingBox';\r\nimport Actor from '../Actor';\r\n\r\nexport default class Movement {\r\n\r\n    private static readonly epsilon = 0.001;\r\n\r\n    public readonly actor: Actor;\r\n    public readonly dest: BoardCell;\r\n\r\n    private tickerCallback: (dt: number) => void;\r\n    private _isRunning = false;\r\n    private _isPaused = false;\r\n\r\n    public constructor(actor: Actor, dest: BoardCell, autostart = true) {\r\n        this.actor = actor;\r\n        this.dest = dest;\r\n\r\n        if (autostart) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        if (this._isRunning) {\r\n            return;\r\n        }\r\n\r\n        const { board, ticker } = this.actor.context;\r\n        const shortestPath = board.getShortestPath(this.actor.nearestCell, this.dest);\r\n        const pathPoints = [...shortestPath.points];\r\n\r\n        if (!pathPoints.length) {\r\n            return null;\r\n        }\r\n\r\n        let movement: IMovementData = this.getMovementData(\r\n            this.actor.nearestCell.bbox,\r\n            pathPoints.shift().bbox\r\n        );\r\n\r\n        this.tickerCallback = (dt: number) => {\r\n            if (this._isPaused) {\r\n                return;\r\n            }\r\n\r\n            const { cx, cy } = this.actor.bbox;\r\n            const { x1, y1, dirx, diry, cosa, sina } = movement;\r\n\r\n            let dx: number;\r\n            let dy: number;\r\n\r\n            dx = dt * this.actor.speed * cosa;\r\n            dy = dt * this.actor.speed * sina;\r\n\r\n            if (Math.abs(dx) > Math.abs(x1 - cx)) {\r\n                dx = Math.abs(x1 - cx) * dirx;\r\n            }\r\n\r\n            if (Math.abs(dy) > Math.abs(y1 - cy)) {\r\n                dy = Math.abs(y1 - cy) * diry;\r\n            }\r\n\r\n            if (Math.abs(dx) <= Movement.epsilon) {\r\n                dx = 0;\r\n            }\r\n\r\n            if (Math.abs(dy) <= Movement.epsilon) {\r\n                dy = 0;\r\n            }\r\n\r\n            if (dx == 0 && dy == 0) {\r\n                this.actor.nearestCell.alignObject(this.actor.renderable);\r\n                const nextCell = pathPoints.shift();\r\n\r\n                if (nextCell) {\r\n                    movement = this.getMovementData(\r\n                        this.actor.nearestCell.bbox,\r\n                        nextCell.bbox\r\n                    );\r\n                } else {\r\n                    this.cancel();\r\n                }\r\n            } else {\r\n                this.actor.move(dx, dy);\r\n            }\r\n\r\n        };\r\n\r\n        ticker.add(this.tickerCallback);\r\n        this._isRunning = true;\r\n    }\r\n\r\n    public pause() {\r\n        this._isPaused = true;\r\n    }\r\n\r\n    public resume() {\r\n        this._isPaused = false;\r\n    }\r\n\r\n    public cancel() {\r\n        this.actor.context.ticker.remove(this.tickerCallback);\r\n    }\r\n\r\n    private getMovementData(src: BoundingBox, dst: BoundingBox): IMovementData {\r\n        const dx = dst.cx - src.cx;\r\n        const dy = dst.cy - src.cy;\r\n        const a = Math.atan2(dy, dx);\r\n\r\n        return {\r\n            dx, dy, a,\r\n            x0: src.cx,\r\n            y0: src.cy,\r\n            x1: dst.cx,\r\n            y1: dst.cy,\r\n            cosa: Math.round(Math.cos(a)),\r\n            sina: Math.round(Math.sin(a)),\r\n            dirx: Math.sign(dx),\r\n            diry: Math.sign(dy)\r\n        };\r\n    }\r\n\r\n}\r\n\r\ninterface IMovementData {\r\n    x0: number;\r\n    y0: number;\r\n    x1: number;\r\n    y1: number;\r\n    dx: number;\r\n    dy: number;\r\n    a: number;\r\n    cosa: number;\r\n    sina: number;\r\n    dirx: number;\r\n    diry: number;\r\n}","import Entity from '../Entity';\r\n\r\nexport default abstract class Block extends Entity {\r\n\r\n    public abstract get isWall(): boolean;\r\n\r\n    public abstract get isDestroyable(): boolean;\r\n\r\n}","import GameContext from '@/game/GameContext';\r\nimport Bricks from './Bricks';\r\nimport Grass from './Grass';\r\nimport Wall from './Wall';\r\n\r\nexport default class BlockFactory {\r\n\r\n    public static getBlock(type: string, context: GameContext) {\r\n        switch (type) {\r\n            case 'grass': return new Grass(context);\r\n            case 'wall': return new Wall(context);\r\n            case 'bricks': return new Bricks(context);\r\n        }\r\n    }\r\n\r\n}","import Resources from '@/game/Resources';\r\nimport { Container, Sprite } from 'pixi.js';\r\nimport Block from './Block';\r\n\r\nexport default class Bricks extends Block {\r\n\r\n    private sprite = Sprite.from(Resources.BRICK_TEXTURE);\r\n\r\n    public get isWall(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public get isDestroyable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public get renderable(): Container {\r\n        return this.sprite;\r\n    }\r\n\r\n}","import Resources from '@/game/Resources';\r\nimport { Container, Sprite } from 'pixi.js';\r\nimport Block from './Block';\r\n\r\nexport default class Grass extends Block {\r\n\r\n    private sprite = Sprite.from(Resources.GRASS_TEXTURE);\r\n\r\n    public get isWall(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public get isDestroyable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public get renderable(): Container {\r\n        return this.sprite;\r\n    }\r\n}\r\n","import Resources from '@/game/Resources';\r\nimport { Container, Sprite } from 'pixi.js';\r\nimport Block from './Block';\r\n\r\nexport default class Wall extends Block {\r\n\r\n    private sprite = Sprite.from(Resources.WALL_TEXTURE);\r\n\r\n    public get isWall(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public get isDestroyable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public get renderable(): Container {\r\n        return this.sprite;\r\n    }\r\n\r\n}","import { ISpritesheetData, SCALE_MODES, Spritesheet, Texture } from 'pixi.js';\r\n\r\nexport const loadTexture = (url: string) => {\r\n    return Texture.from(url, {\r\n        scaleMode: SCALE_MODES.NEAREST\r\n    });\r\n};\r\n\r\nexport const loadSpritesheet = async (atlasFilepath: string, sheetData: ISpritesheetData) => {\r\n    const sheet = new Spritesheet(Texture.from(atlasFilepath, {\r\n        scaleMode: SCALE_MODES.NEAREST\r\n    }), sheetData);\r\n\r\n    return await new Promise<Spritesheet>(resolve => {\r\n        sheet.parse(() => resolve(sheet));\r\n    });\r\n};","import BlockFactory from '../entity/blocks/BlockFactory';\r\nimport GameContext from '../GameContext';\r\n\r\nexport default class LevelLoader {\r\n\r\n    public static load(level: ILevelDefinition, context: GameContext) {\r\n        const board = context.board;\r\n        const blocksMap = new Map<string, string>();\r\n        \r\n        level.blocks.forEach(b => {\r\n            const block = this.parseBlock(b);\r\n            \r\n            for (let col = block.x0; col <= block.x1; col++) {\r\n                for (let row = block.y0; row <= block.y1; row++) {\r\n                    const key = col + '#' + row;\r\n                    blocksMap.set(key, block.type);\r\n                }\r\n            }\r\n        });\r\n\r\n        [...blocksMap.entries()].forEach(([key, type]) => {\r\n            const keySplit = key.split('#');\r\n            const col = +keySplit[0];\r\n            const row = +keySplit[1];\r\n            const blockType = BlockFactory.getBlock(type, context);\r\n\r\n            board.addCell(col, row, blockType);\r\n        });\r\n    }\r\n\r\n    private static parseBlock(blockDef: IBlockDefinition) {\r\n        const coordsSplit = blockDef.coords.split(':');\r\n        const c0 = coordsSplit[0].split(',');\r\n\r\n        const x0 = Math.max(Math.round(+c0[0]), 1) - 1;\r\n        const y0 = Math.max(Math.round(+c0[1]), 1) - 1;\r\n        let x1 = x0;\r\n        let y1 = y0;\r\n\r\n        if (coordsSplit.length > 1) {\r\n            const c1 = coordsSplit[1].split(',');\r\n            x1 = Math.max(Math.round(+c1[0]), 1) - 1;\r\n            y1 = Math.max(Math.round(+c1[1]), 1) - 1;\r\n        }\r\n\r\n        return { x0, y0, x1, y1, type: blockDef.type };\r\n    }\r\n\r\n}\r\n\r\nexport interface ILevelDefinition {\r\n    blocks: IBlockDefinition[]\r\n}\r\n\r\nexport interface IBlockDefinition {\r\n    coords: string;\r\n    type: 'grass' | 'wall' | 'bricks';\r\n}","import Game from './game/Game';\r\nimport './index.scss';\r\n\r\nconst game = new Game();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkbomberman\"] = globalThis[\"webpackChunkbomberman\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_heap_index_js-node_modules_pixi_js_dist_esm_pixi_js-node_modules_rbush_r-331d17\"], () => (__webpack_require__(\"./src/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}