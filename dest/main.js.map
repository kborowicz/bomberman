{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,iEAAe,qBAAuB,kBAAkB;;;;;;;;;;;ACAxD,iEAAe,qBAAuB,cAAc;;;;;;;;;;;ACApD,iEAAe,qBAAuB,eAAe;;;;;;;;;;;ACArD,iEAAe,qBAAuB,aAAa;;;;;;;;;;;ACAnD;AACA,iEAAe,EAAE;;;;;;;;;;;;;ACAO;AAET,MAAM,KAAK;IAEf,MAAM,CAAC,GAAG,CAAC,EAAa,EAAE,EAAa;QAC1C,MAAM,IAAI,GAAG,IAAI,6CAAI,CAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3D,MAAM,KAAK,GAAG,IAAI,GAAG,EAAgB,CAAC;QAEtC,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,kCAAkC;QAElC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;YAClB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAE1B,IAAI,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE;gBACxB,OAAO,WAAW,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzD;YAED,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;;gBAC9C,MAAM,YAAY,GAAG,WAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,mCAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE5E,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;oBAC/B,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;iBAC9C;gBAED,IAAI,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,EAAE;oBAC5C,OAAO;iBACV;gBAED,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;gBAChC,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;gBAEhC,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC;gBAC5B,MAAM,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC;gBAE5B,yDAAyD;gBACzD,iCAAiC;gBACjC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC/D,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAE1C,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,EAAE;oBACvD,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;oBAC9B,YAAY,CAAC,MAAM,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;oBACjE,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC;oBAElC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;wBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBACxB,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;qBAC9B;yBAAM;wBACH,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;qBACjC;iBACJ;YACL,CAAC,CAAC,CAAC;SACN;QAED,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAEO,MAAM,CAAC,SAAS,CAAC,EAAa,EAAE,EAAa;QACjD,qBAAqB;QACrB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAErC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;CAEJ;AAED,MAAM,IAAI;IAYN,YAAmB,IAAe;QAVlC;;;;;WAAgC;QAEhC;;;;;WAAoB;QAEpB;;;;mBAAgB,KAAK;WAAC;QACtB;;;;mBAAgB,KAAK;WAAC;QAEtB;;;;;WAAsB;QACtB;;;;;WAAsB;QAGlB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,SAAS;QACZ,MAAM,SAAS,GAAW,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,WAAW,GAAS,IAAI,CAAC,MAAM,CAAC;QAEpC,OAAO,WAAW,EAAE;YAChB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5B,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC;SACpC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;CAEJ;;;;;;;;;;;;ACxGc,MAAM,eAAe;IAEzB,MAAM,CAAC,UAAU,CAAC,EAAU,EAAE,EAAU,EAAE,CAAS;QACtD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAElB,MAAM,MAAM,GAAuB,EAAE,CAAC;QAEtC,OAAO,CAAC,IAAI,CAAC,EAAE;YACX,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClB;iBAAM;gBACH,CAAC,IAAI,CAAC,CAAC;gBACP,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACxB;YAED,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAE9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAE9B,CAAC,IAAI,CAAC,CAAC;SACV;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;CAEJ;;;;;;;;;;;;;;;;;;ACjCqC;AAEW;AACpB;AAGwC;AACvC;AACM;AAErB,MAAM,IAAI;IAOrB;QALA;;;;;WAAwB;QAExB;;;;;WAAoB;QACpB;;;;;WAAuB;QAGnB,IAAI,CAAC,GAAG,GAAG,IAAI,gDAAW,EAAE,CAAC;QAC7B,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,eAAe;QACf,0DAA0D;QAC1D,qBAAqB;QACrB,mCAAmC;QACnC,wBAAwB;QACxB,2DAA2D;QAC3D,MAAM;IACV,CAAC;IAEO,KAAK,CAAC,UAAU;QACpB,MAAM,6DAAoB,EAAE,CAAC;QAE7B,IAAI,CAAC,KAAK,GAAG,gEAAgB,CAAC,uDAA0B,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,+CAAM,CAAC,IAAI,CAAC,CAAC;QAE/B,qCAAqC;QACrC,kBAAkB;QAClB,kCAAkC;QAClC,iCAAiC;QACjC,KAAK;QAEL,MAAM,IAAI,GAAG,mDAAS,CAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAC1B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAC7B,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEhD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;QAEtD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;IACxD,CAAC;CAEJ;;;;;;;;;;;;;;;;;;;AC7DsD;AACX;AAEgB;AAEP;AAGX;AACI;AACJ;AAE3B,MAAM,MAAM;IAUvB,YAAmB,IAAU;QAR7B;;;;;WAAgC;QAChC;;;;;WAA4B;QAE5B;;;;mBAAkB,KAAK;WAAC;QACxB;;;;mBAAkB,KAAK;WAAC;QACxB;;;;mBAAkB,KAAK;WAAC;QACxB;;;;mBAAkB,KAAK;WAAC;QAGpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,gDAAW,CAAC,iDAAY,CAAC,0DAAS,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;QAE1D,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;gBACd,MAAM,QAAQ,GAAG,IAAI,yDAAQ,CAAC,IAAI,CAAC,CAAC;gBACpC,MAAM,QAAQ,GAAG,IAAI,yDAAQ,CAAC,IAAI,CAAC,CAAC;gBACpC,MAAM,MAAM,GAAG,IAAI,2DAAU,CAAC,IAAI,CAAC,CAAC;gBACpC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YACvB,MAAM,KAAK,GAAG,GAAG,CAAC;YAClB,MAAM,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC;YAExC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;YACvE,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;YAEvE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACpB,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrD;YAED,IAAI,EAAE,IAAI,CAAC,EAAE;gBACT,MAAM,WAAW,GAAG,IAAI,wEAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBAElE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;iBACtC;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;iBAC/E;aACJ;YAED,IAAI,EAAE,IAAI,CAAC,EAAE;gBACT,MAAM,WAAW,GAAG,IAAI,wEAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBAElE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;iBACtC;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;iBAC/E;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAW,QAAQ;QACf,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAClC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAEnC,OAAO,IAAI,wEAAW,CAAC,8EAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EACpD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CACvD,CAAC;IACN,CAAC;IAEO,cAAc,CAAC,GAAW,EAAE,QAAmC;QACnE,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;YACrC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE;gBACf,QAAQ,CAAC,IAAI,CAAC,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE;gBACf,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;;;;;;;;;;;;;;;;;;ACpHkE;AACL;AACpB;AACF;AACE;AAC2B;AAEtD,MAAM,SAAS;IAOnB,MAAM,CAAC,KAAK,CAAC,UAAU;QAC1B,IAAI,CAAC,aAAa,GAAG,iEAAW,CAAC,yDAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,iEAAW,CAAC,wDAAO,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,iEAAW,CAAC,0DAAO,CAAC,CAAC;QACzC,IAAI,CAAC,qBAAqB,GAAG,MAAM,qEAAe,CAAC,uEAAc,EAAE,6DAAkB,CAAC,CAAC;IAC3F,CAAC;CAEJ;;;;;;;;;;;;;;;ACtB2C;AAGJ;AACM;AAM/B,MAAM,KAAK;IAMtB,YAAmB,QAAqB,IAAI;QAJ5C;;;;;WAA2C;QAC3C;;;;;WAA0C;QAC1C;;;;;WAAiC;QAG7B,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,GAAG,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,EAAE,CAAC;QAEtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,8CAAS,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,uDAAc,CAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EACrD,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3D,CAAC;IACN,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAEM,SAAS,CAAC,GAAW,EAAE,GAAW;QACrC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEM,OAAO,CAAC,GAAW,EAAE,GAAW;QACnC,MAAM,IAAI,GAAG,IAAI,iDAAS,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa,CAAC,GAAW,EAAE,GAAW,EAAE,MAAc;QACzD,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QACvB,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QAExB,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,CAAC;CAEJ;;;;;;;;;;;;;;;;ACzDgC;AAC4B;AAEP;AAEjB;AAG9B,MAAM,SAAS;IAUlB,YAAmB,GAAW,EAAE,GAAW,EAAE,IAAY,EAAE,KAAY;QARvE;;;;;WAAgC;QAChC;;;;;WAA8B;QAC9B;;;;mBAAkB,KAAK;WAAC;QAExB;;;;;WAA4B;QAC5B;;;;;WAA4B;QAC5B;;;;;WAAsC;QAGlC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;QACtB,MAAM,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC;QACtB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QACrB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,2CAAM,CAAC,gEAAuB,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,wEAAW,CAAC,8EAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAEtE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,IAAW,SAAS;QAChB,OAAO;YACH,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SACnD,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACrC,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,IAAW,KAAK;;QACZ,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAAC;IACxC,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,IAAW,KAAK;;QACZ,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAAC;IACxC,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,IAAW,KAAK;;QACZ,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAAC;IACxC,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,IAAW,KAAK;;QACZ,OAAO,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAAC;IACxC,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAW,MAAM;;QACb,OAAO,CACH,WAAI,CAAC,MAAM,0CAAE,MAAM,MAAK,KAAK;YAC7B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK;YAC5B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAC/B,CAAC;IACN,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAW,MAAM;;QACb,OAAO,CACH,WAAI,CAAC,MAAM,0CAAE,MAAM,MAAK,KAAK;YAC7B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK;YAC5B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAC/B,CAAC;IACN,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAW,MAAM;;QACb,OAAO,CACH,WAAI,CAAC,MAAM,0CAAE,MAAM,MAAK,KAAK;YAC7B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK;YAC5B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAC/B,CAAC;IACN,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,IAAW,MAAM;;QACb,OAAO,CACH,WAAI,CAAC,MAAM,0CAAE,MAAM,MAAK,KAAK;YAC7B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK;YAC5B,WAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,KAAK,CAC/B,CAAC;IACN,CAAC;IAEM,SAAS,CAAC,aAAa,GAAG,KAAK;QAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,+DAAsB,CAAC;IACjD,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,gEAAuB,CAAC;IAClD,CAAC;IAEM,SAAS;QACZ,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,+DAAsB,CAAC;IACjD,CAAC;CAEJ;;;;;;;;;;;;;;;AC1JyB;AAGmC;AAK9C,MAAM,cAAc;IAO/B,YACI,aAAgC,EAChC,gBAAsC;QAP1C;;;;mBAA0B,IAAI,IAAI,EAAE;WAAC;QACrC;;;;mBAA2C,IAAI,GAAG,EAAE;WAAC;QACrD;;;;;WAA6C;QAC7C;;;;;WAAmD;QAM/C,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;QACvC,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC;IACjD,CAAC;IAEM,aAAa,CAAC,KAAe;QAChC,IAAI,KAAK,YAAY,wEAAW,EAAE;YAC9B,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAClD,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAC5D,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAE5D,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;oBAEpB,OAAO,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;iBACnC;qBAAM;oBACH,OAAO,KAAK,CAAC;iBAChB;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,gBAAgB,CAAC,SAAoB;QACxC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,CAAC;QAErC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACzB,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE;YAClB,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE;SACrB,CAAC,CAAC;IACP,CAAC;IAEM,SAAS,CAAC,GAAW,EAAE,GAAW;QACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,OAAO,CAAC,IAAe;QAC1B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,eAAe;QAClB,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpE,CAAC;IAEO,SAAS,CAAC,GAAW,EAAE,GAAW;QACtC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC3B,CAAC;CAEJ;AAED,MAAM,IAAK,SAAQ,8CAAgB;IAExB,MAAM,CAAC,IAAe;QACzB,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAE7C,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IACtD,CAAC;IAEM,WAAW,CAAC,CAAY,EAAE,CAAY;QACzC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,WAAW,CAAC,CAAY,EAAE,CAAY;QACzC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;CAEJ;;;;;;;;;;;;AC/FM,MAAe,gBAAgB;IAE3B,aAAa,CAAC,KAAuB;;QACxC,OAAO,gBAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,0CAAE,aAAa,EAAE,mCAAI,KAAK,CAAC;IAClE,CAAC;CAIJ;;;;;;;;;;;;;;ACV8D;AAER;AAExC,MAAM,WAAY,SAAQ,+DAAgB;IAIrD,YAAmB,GAAc;QAC7B,KAAK,EAAE,CAAC;QAHZ;;;;;WAA+B;QAI3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAEM,gBAAgB,CAAC,KAAuB;QAC3C,IAAI,KAAK,YAAY,WAAW,EAAE;YAC9B,OAAO,IAAI,kEAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC/C;IACL,CAAC;CAEJ;;;;;;;;;;;;ACpBc,MAAM,KAAK;IAKtB,YAAmB,CAAS,EAAE,CAAS;QAHvC;;;;;WAA0B;QAC1B;;;;;WAA0B;QAGtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;CAEJ;;;;;;;;;;;;;ACV2B;AAEb,MAAM,SAAS;IAK1B,YAAmB,EAAS,EAAE,EAAS;QAHvC;;;;;WAA0B;QAC1B;;;;;WAA0B;QAGtB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,EAAU,EAAE,EAAU;QAC/B,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QAChC,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACpE,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QAChC,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEM,MAAM,CAAC,EAAU;QACpB,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QAChC,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEM,cAAc,CAAC,IAAe;QACjC,4CAA4C;QAC5C,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;YAChD,OAAO,KAAK,CAAC;SAChB;QAED,kCAAkC;QAClC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;YAChD,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,mBAAmB,CAAC,IAAe;QACtC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAEM,mBAAmB,CAAC,IAAe;QACtC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;QACnE,OAAO,IAAI,SAAS,CAAC,IAAI,8CAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,8CAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,EAAU,EAAE,EAAU,EAAE,IAAY;QACvD,OAAO,IAAI,SAAS,CAAC,IAAI,8CAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,8CAAK,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7E,CAAC;CAEJ;;;;;;;;;;;;ACtEc,MAAM,mBAAmB;IAKpC,YAAmB,EAAe,EAAE,EAAe;QAHnD;;;;;WAAwB;QACxB;;;;;WAAwB;QAGpB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;CAEJ;;;;;;;;;;;;;;ACjB6E;AAEvE,MAAM,WAAW,GAAG,CAAC,GAAW,EAAE,EAAE;IACvC,OAAO,iDAAY,CAAC,GAAG,EAAE;QACrB,SAAS,EAAE,wDAAmB;KACjC,CAAC,CAAC;AACP,CAAC,CAAC;AAEK,MAAM,eAAe,GAAG,KAAK,EAAE,aAAqB,EAAE,SAA2B,EAAE,EAAE;IACxF,MAAM,KAAK,GAAG,IAAI,gDAAW,CAAC,iDAAY,CAAC,aAAa,EAAE;QACtD,SAAS,EAAE,wDAAmB;KACjC,CAAC,EAAE,SAAS,CAAC,CAAC;IAEf,OAAO,MAAM,IAAI,OAAO,CAAc,OAAO,CAAC,EAAE;QAC5C,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;;;;;;;;;;;;;AChBiC;AAGpB,MAAM,WAAW;IAErB,MAAM,CAAC,IAAI,CAAC,KAAuB;QACtC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,MAAM,KAAK,GAAG,IAAI,oDAAK,EAAE,CAAC;QAE1B,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnB,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE;gBAC7C,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE;oBAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBAErC,QAAQ,KAAK,CAAC,IAAI,EAAE;wBAChB,KAAK,OAAO,CAAC,CAAC;4BACV,IAAI,CAAC,UAAU,EAAE,CAAC;4BAClB,MAAM;yBACT;wBACD,KAAK,MAAM,CAAC,CAAC;4BACT,IAAI,CAAC,SAAS,EAAE,CAAC;4BACjB,MAAM;yBACT;qBACJ;iBACJ;aAEJ;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,MAAM,CAAC,UAAU,CAAC,QAA0B;QAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAErC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,EAAE,GAAG,EAAE,CAAC;QAEZ,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,MAAM,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YACzC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;SAC5C;QAED,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC;IACnD,CAAC;CAEJ;;;;;;;;;;;;;;;AClDwC;AAEJ;AACP;AAEf,MAAM,QAAS,SAAQ,+CAAM;IAA5C;;QAEI;;;;mBAA6B,CAAC;WAAC;IA+DnC,CAAC;IA7DU,OAAO,CAAC,IAAe;QAC1B,UAAU,CAAC,GAAG,EAAE;YACZ,MAAM,iBAAiB,GAAG,EAAE,CAAC;YAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;YACpB,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;YAEpB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,MAAM,OAAO,GAAqB,EAAE,CAAC;YAErC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YAExF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;gBACrC,UAAU,CAAC,GAAG,EAAE;;oBACZ,MAAM;oBACN,IAAI,WAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,0CAAE,MAAM,MAAK,KAAK,EAAE;wBACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5F,CAAC,EAAE,CAAC;qBACP;oBAED,QAAQ;oBACR,IAAI,WAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,0CAAE,MAAM,MAAK,KAAK,EAAE;wBACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5F,CAAC,EAAE,CAAC;qBACP;oBAED,SAAS;oBACT,IAAI,WAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,0CAAE,MAAM,MAAK,KAAK,EAAE;wBACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5F,CAAC,EAAE,CAAC;qBACP;oBAED,OAAO;oBACP,IAAI,WAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,0CAAE,MAAM,MAAK,KAAK,EAAE;wBACzD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC5F,CAAC,EAAE,CAAC;qBACP;gBACL,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,CAAC;aAC7B;QAEL,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEO,kBAAkB,CAAC,GAAW,EAAE,GAAW,EAAE,QAAgB;QACjE,MAAM,MAAM,GAAG,IAAI,mDAAc,CAAC,6FAAuD,CAAC,CAAC;QAC3F,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC;QAC1B,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC;QAE1B,MAAM,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;QAEpB,MAAM,CAAC,IAAI,EAAE,CAAC;QAEd,OAAO,MAAM,CAAC;IAClB,CAAC;CAEJ;;;;;;;;;;;;;;;;ACtEwD;AAEvB;AACA;AACJ;AAEf,MAAM,UAAW,SAAQ,+CAAM;IAEnC,OAAO,CAAC,IAAe;QAC1B,MAAM,QAAQ,GAAG,IAAI,iDAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;QAE/E,MAAM,IAAI,GAAG,IAAI,mEAAe,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;YAC7D,MAAM,EAAE,GAAG;YACX,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,GAAG;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEvB,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QACjE,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;QAE1C,UAAU,CAAC,GAAG,EAAE;YACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;gBACzE,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAEnB,IAAI,iDAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtC,kEAAkE;aACrE;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;CAEJ;;;;;;;;;;;;;;;;ACzCwC;AAEE;AAEN;AACP;AAQf,MAAM,QAAS,SAAQ,+CAAM;IAMxC,YAAmB,IAAU,EAAE,KAAsB;;QACjD,KAAK,CAAC,IAAI,CAAC,CAAC;QALhB;;;;;WAAgC;QAChC;;;;;WAA+B;QAC/B;;;;;WAA0C;QAKtC,IAAI,CAAC,MAAM,GAAG,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,mCAAI,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,mCAAI,IAAI,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,WAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,gBAAgB,mCAAI,GAAG,CAAC;IAC3D,CAAC;IAEM,OAAO,CAAC,IAAe;QAC1B,UAAU,CAAC,GAAG,EAAE;YAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,UAAU,CAAC,GAAG,EAAE;oBACZ,MAAM,IAAI,GAAG,6DAA0B,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE;wBACxB,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAC3E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC;gBACP,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACjC;QAEL,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAEO,kBAAkB,CAAC,GAAW,EAAE,GAAW,EAAE,QAAgB;QACjE,MAAM,MAAM,GAAG,IAAI,mDAAc,CAAC,6FAAuD,CAAC,CAAC;QAC3F,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QACzB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC;QAC1B,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC;QAE1B,MAAM,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC;QAEpB,MAAM,CAAC,IAAI,EAAE,CAAC;QAEd,OAAO,MAAM,CAAC;IAClB,CAAC;CAEJ;;;;;;;;;;;;ACtDc,MAAe,MAAM;IAIhC,YAAmB,IAAU;QAF7B;;;;;WAA8B;QAG1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;CAKJ;;;;;;;;;;;ACf8B;AACT;AAEtB,MAAM,IAAI,GAAG,IAAI,kDAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;UCHxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://bomberman/./src/game/assets/explosion/explosion.png","webpack://bomberman/./src/game/assets/grass.png","webpack://bomberman/./src/game/assets/player.png","webpack://bomberman/./src/game/assets/wall.png","webpack://bomberman/./src/index.scss","webpack://bomberman/./src/game/AStart.ts","webpack://bomberman/./src/game/Bresenham.ts","webpack://bomberman/./src/game/Game.ts","webpack://bomberman/./src/game/Player.ts","webpack://bomberman/./src/game/Resources.ts","webpack://bomberman/./src/game/board/Board.ts","webpack://bomberman/./src/game/board/BoardCell.ts","webpack://bomberman/./src/game/board/BoardCellsTree.ts","webpack://bomberman/./src/game/collision/AbstractCollider.ts","webpack://bomberman/./src/game/collision/colliders/BoxCollider.ts","webpack://bomberman/./src/game/collision/shapes/Point.ts","webpack://bomberman/./src/game/collision/shapes/Rectangle.ts","webpack://bomberman/./src/game/collision/tests/BoxBoxCollisionTest.ts","webpack://bomberman/./src/game/loader/AssetsLoader.ts","webpack://bomberman/./src/game/loader/LevelLoader.ts","webpack://bomberman/./src/game/weapons/Dynamite.ts","webpack://bomberman/./src/game/weapons/MortarBomb.ts","webpack://bomberman/./src/game/weapons/RingBomb.ts","webpack://bomberman/./src/game/weapons/Weapon.ts","webpack://bomberman/./src/index.ts","webpack://bomberman/webpack/bootstrap","webpack://bomberman/webpack/runtime/chunk loaded","webpack://bomberman/webpack/runtime/compat get default export","webpack://bomberman/webpack/runtime/define property getters","webpack://bomberman/webpack/runtime/global","webpack://bomberman/webpack/runtime/hasOwnProperty shorthand","webpack://bomberman/webpack/runtime/make namespace object","webpack://bomberman/webpack/runtime/node module decorator","webpack://bomberman/webpack/runtime/publicPath","webpack://bomberman/webpack/runtime/jsonp chunk loading","webpack://bomberman/webpack/before-startup","webpack://bomberman/webpack/startup","webpack://bomberman/webpack/after-startup"],"sourcesContent":["export default __webpack_public_path__ + \"explosion.png\";","export default __webpack_public_path__ + \"grass.png\";","export default __webpack_public_path__ + \"player.png\";","export default __webpack_public_path__ + \"wall.png\";","// extracted by mini-css-extract-plugin\nexport default {};","import { BoardCell } from './board/BoardCell';\r\nimport Heap from 'heap';\r\n\r\nexport default class AStar {\r\n\r\n    public static run(c0: BoardCell, c1: BoardCell): BoardCell[] {\r\n        const heap = new Heap<Node>((a, b) => a.fscore - b.fscore);\r\n        const nodes = new Map<string, Node>();\r\n\r\n        const startNode = new Node(c0);\r\n        startNode.gscore = 0;\r\n        startNode.fscore = 0;\r\n        startNode.opened = true;\r\n\r\n        heap.push(startNode);\r\n        // nodes.set(startNode.cell.hash);\r\n\r\n        while (!heap.empty()) {\r\n            const currentNode = heap.pop();\r\n            currentNode.closed = true;\r\n\r\n            if (currentNode.cell == c1) {\r\n                return currentNode.backtrace().map(node => node.cell);\r\n            }\r\n\r\n            currentNode.cell.neighbors.forEach(neighborCell => {\r\n                const neighborNode = nodes.get(neighborCell.hash) ?? new Node(neighborCell);\r\n\r\n                if (!nodes.has(neighborCell.hash)) {\r\n                    nodes.set(neighborCell.hash, neighborNode);\r\n                }\r\n\r\n                if (neighborNode.closed || neighborCell.isWall) {\r\n                    return;\r\n                }\r\n\r\n                const x1 = currentNode.cell.col;\r\n                const y1 = currentNode.cell.row;\r\n\r\n                const x2 = neighborCell.col;\r\n                const y2 = neighborCell.row;\r\n\r\n                // get the distance between current node and the neighbor\r\n                // and calculate the next g score\r\n                const cost = (x2 - x1 === 0 || y2 - y1 === 0) ? 1 : Math.SQRT2;\r\n                const ngscore = currentNode.gscore + cost;\r\n\r\n                if (!neighborNode.opened || ngscore < neighborNode.gscore) {\r\n                    neighborNode.gscore = ngscore;\r\n                    neighborNode.fscore = ngscore + this.heuristic(neighborCell, c1);\r\n                    neighborNode.parent = currentNode;\r\n\r\n                    if (!neighborNode.opened) {\r\n                        heap.push(neighborNode);\r\n                        neighborNode.opened = true;\r\n                    } else {\r\n                        heap.updateItem(neighborNode);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        console.log('error');\r\n    }\r\n\r\n    private static heuristic(c0: BoardCell, c1: BoardCell) {\r\n        // Manhattan distance\r\n        const d1 = Math.abs(c1.col - c0.col);\r\n        const d2 = Math.abs(c1.row - c0.row);\r\n\r\n        return (d1 + d2);\r\n        return (c1.col - c0.col) ** 2 + (c1.row - c0.row) ** 2;\r\n    }\r\n\r\n}\r\n\r\nclass Node {\r\n\r\n    public readonly cell: BoardCell;\r\n\r\n    public parent: Node;\r\n\r\n    public opened = false;\r\n    public closed = false;\r\n\r\n    public gscore: number;\r\n    public fscore: number;\r\n\r\n    public constructor(cell: BoardCell) {\r\n        this.cell = cell;\r\n    }\r\n\r\n    public backtrace(): Node[] {\r\n        const backtrace: Node[] = [this];\r\n        let currentNode: Node = this.parent;\r\n\r\n        while (currentNode) {\r\n            backtrace.push(currentNode);\r\n            currentNode = currentNode.parent;\r\n        }\r\n\r\n        return backtrace;\r\n    }\r\n\r\n}","export default class BresenhamCircle {\r\n\r\n    public static getOutline(cx: number, cy: number, r: number) {\r\n        let x = 0;\r\n        let y = r;\r\n        let d = 3 - 2 * r;\r\n\r\n        const points: [number, number][] = [];\r\n\r\n        while (x <= y) {\r\n            if (d < 0) {\r\n                d += 4 * x + 2;\r\n            } else {\r\n                y -= 1;\r\n                d += 4 * (x - y) + 2;\r\n            }\r\n\r\n            points.push([cx + x, cy + y]);\r\n            points.push([cx - x, cy + y]);\r\n            points.push([cx + x, cy - y]);\r\n            points.push([cx - x, cy - y]);\r\n\r\n            points.push([cx + y, cy + x]);\r\n            points.push([cx - y, cy + x]);\r\n            points.push([cx + y, cy - x]);\r\n            points.push([cx - y, cy - x]);\r\n\r\n            x += 1;\r\n        }\r\n\r\n        return points;\r\n    }\r\n\r\n}","import { Application } from 'pixi.js';\r\nimport level1 from './assets/levels/level1.json';\r\nimport level2 from './assets/levels/level2.json';\r\nimport AStar from './AStart';\r\nimport BreadFirstSearch from './BestFirstSearch';\r\nimport Board from './board/Board';\r\nimport LevelLoader, { ILevelDefinition } from './loader/LevelLoader';\r\nimport Player from './Player';\r\nimport Resources from './Resources';\r\n\r\nexport default class Game {\r\n\r\n    public app: Application;\r\n\r\n    public board: Board;\r\n    private player: Player;\r\n\r\n    public constructor() {\r\n        this.app = new Application();\r\n        document.getElementById('root').append(this.app.view);\r\n\r\n        this.initialize();\r\n\r\n        // this.init();\r\n        // Add a ticker callback to move the sprite back and forth\r\n        // let elapsed = 0.0;\r\n        // this.app.ticker.add((delta) => {\r\n        //     elapsed += delta;\r\n        //     sprite.x = 100.0 + Math.cos(elapsed / 50.0) * 100.0;\r\n        // });\r\n    }\r\n\r\n    private async initialize() {\r\n        await Resources.initialize();\r\n\r\n        this.board = LevelLoader.load(level2 as ILevelDefinition);\r\n        this.player = new Player(this);\r\n\r\n        // const path = BreadFirstSearch.run(\r\n        //     this.board,\r\n        //     this.board.getCellAt(1, 1),\r\n        //     this.board.getCellAt(7, 1)\r\n        // );\r\n\r\n        const path = AStar.run(\r\n            this.board.getCellAt(1, 1),\r\n            this.board.getCellAt(7, 1)\r\n        );\r\n\r\n        path.forEach(c => c.setAsWood());\r\n\r\n        this.app.stage.addChild(this.board.renderable);\r\n        this.app.stage.addChild(this.player.renderable);\r\n\r\n        this.app.screen.width = this.board.renderable.width;\r\n        this.app.screen.height = this.board.renderable.height;\r\n\r\n        this.app.view.width = this.board.renderable.width;\r\n        this.app.view.height = this.board.renderable.height;\r\n    }\r\n\r\n}","import { Application, Sprite, Texture } from 'pixi.js';\r\nimport playerImg from './assets/player.png';\r\nimport Board from './board/Board';\r\nimport BoxCollider from './collision/colliders/BoxCollider';\r\nimport { HasCollider } from './collision/HasCollider';\r\nimport Rectangle from './collision/shapes/Rectangle';\r\nimport Game from './Game';\r\nimport { Renderable } from './Renderable';\r\nimport Dynamite from './weapons/Dynamite';\r\nimport MortarBomb from './weapons/MortarBomb';\r\nimport RingBomb from './weapons/RingBomb';\r\n\r\nexport default class Player implements Renderable, HasCollider {\r\n\r\n    private readonly sprite: Sprite;\r\n    private readonly game: Game;\r\n\r\n    private isDownW = false;\r\n    private isDownS = false;\r\n    private isDownA = false;\r\n    private isDownD = false;\r\n\r\n    public constructor(game: Game) {\r\n        this.game = game;\r\n        const board = this.game.board;\r\n        const app = this.game.app;\r\n\r\n        this.sprite = Sprite.from(Texture.from(playerImg));\r\n\r\n        this.sprite.width = board.cellSize;\r\n        this.sprite.height = board.cellSize;\r\n\r\n        this.sprite.x = 64;\r\n        this.sprite.y = 64;\r\n\r\n        this.addKeyObserver('w', isDown => this.isDownW = isDown);\r\n        this.addKeyObserver('s', isDown => this.isDownS = isDown);\r\n        this.addKeyObserver('a', isDown => this.isDownA = isDown);\r\n        this.addKeyObserver('d', isDown => this.isDownD = isDown);\r\n\r\n        document.addEventListener('keypress', e => {\r\n            if (e.key == ' ') {\r\n                const dynamite = new Dynamite(game);\r\n                const ringBomb = new RingBomb(game);\r\n                const mortar = new MortarBomb(game);\r\n                mortar.spawnAt(this.nearestBoardCell);\r\n            }\r\n        });\r\n\r\n        app.ticker.add(timeDelta => {\r\n            const speed = 3.5;\r\n            const movementDelta = timeDelta * speed;\r\n\r\n            let dx = (+this.isDownA * (-1) + +this.isDownD * (+1)) * movementDelta;\r\n            let dy = (+this.isDownW * (-1) + +this.isDownS * (+1)) * movementDelta;\r\n\r\n            if (dx != 0 && dy != 0) {\r\n                dx = Math.sign(dx) * movementDelta / Math.sqrt(2);\r\n                dy = Math.sign(dy) * movementDelta / Math.sqrt(2);\r\n            }\r\n\r\n            if (dx != 0) {\r\n                const newCollider = new BoxCollider(this.collider.box.shiftX(dx));\r\n\r\n                if (!board.collider.testCollision(newCollider)) {\r\n                    this.sprite.x = newCollider.box.x0;\r\n                } else {\r\n                    this.sprite.x = Math.round(this.sprite.x / board.cellSize) * board.cellSize;\r\n                }\r\n            }\r\n\r\n            if (dy != 0) {\r\n                const newCollider = new BoxCollider(this.collider.box.shiftY(dy));\r\n\r\n                if (!board.collider.testCollision(newCollider)) {\r\n                    this.sprite.y = newCollider.box.y0;\r\n                } else {\r\n                    this.sprite.y = Math.round(this.sprite.y / board.cellSize) * board.cellSize;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public get renderable() {\r\n        return this.sprite;\r\n    }\r\n\r\n    public get collider() {\r\n        const x0 = this.sprite.x;\r\n        const y0 = this.sprite.y;\r\n        const x1 = x0 + this.sprite.width;\r\n        const y1 = y0 + this.sprite.height;\r\n\r\n        return new BoxCollider(Rectangle.fromCoords(x0, y0, x1, y1));\r\n    }\r\n\r\n    public get nearestBoardCell() {\r\n        return this.game.board.getCellAt(\r\n            Math.round(this.sprite.x / this.game.board.cellSize),\r\n            Math.round(this.sprite.y / this.game.board.cellSize)\r\n        );\r\n    }\r\n\r\n    private addKeyObserver(key: string, listener: (isDown: boolean) => void) {\r\n        document.addEventListener('keydown', e => {\r\n            if (e.key === key) {\r\n                listener(true);\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keyup', e => {\r\n            if (e.key === key) {\r\n                listener(false);\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { Spritesheet, Texture } from 'pixi.js';\r\nimport explosionAtlasData from './assets/explosion/explosion.json';\r\nimport explosionAtlas from './assets/explosion/explosion.png';\r\nimport grassImg from './assets/grass.png';\r\nimport wallImg from './assets/wall.png';\r\nimport woodImg from './assets/player.png';\r\nimport { loadSpritesheet, loadTexture } from './loader/AssetsLoader';\r\n\r\nexport default class Resources {\r\n\r\n    public static GRASS_TEXTURE: Texture;\r\n    public static WALL_TEXTURE: Texture;\r\n    public static WOOD_TEXTURE: Texture;\r\n    public static EXPLOSION_SPRITESHEET: Spritesheet;\r\n\r\n    public static async initialize() {\r\n        this.GRASS_TEXTURE = loadTexture(grassImg);\r\n        this.WALL_TEXTURE = loadTexture(wallImg);\r\n        this.WOOD_TEXTURE = loadTexture(woodImg);\r\n        this.EXPLOSION_SPRITESHEET = await loadSpritesheet(explosionAtlas, explosionAtlasData);\r\n    }\r\n\r\n}","import { Container, Sprite } from 'pixi.js';\r\nimport { HasCollider } from '../collision/HasCollider';\r\nimport { Renderable } from '../Renderable';\r\nimport { BoardCell } from './BoardCell';\r\nimport BoardCellsTree from './BoardCellsTree';\r\n\r\nexport interface IBoardProps {\r\n    cellSize?: number\r\n}\r\n\r\nexport default class Board implements Renderable, HasCollider {\r\n\r\n    private readonly cellsContainer: Container;\r\n    public readonly cellsTree: BoardCellsTree;\r\n    public readonly cellSize: number;\r\n\r\n    public constructor(props: IBoardProps = null) {\r\n        const { cellSize = 40 } = props ?? {};\r\n\r\n        this.cellSize = cellSize;\r\n        this.cellsContainer = new Container();\r\n        this.cellsTree = new BoardCellsTree(\r\n            cell => this.cellsContainer.addChild(cell.renderable),\r\n            cell => this.cellsContainer.removeChild(cell.renderable)\r\n        );\r\n    }\r\n\r\n    public get renderable() {\r\n        return this.cellsContainer;\r\n    }\r\n\r\n    public get collider() {\r\n        return this.cellsTree;\r\n    }\r\n\r\n    public getCellAt(col: number, row: number): BoardCell {\r\n        return this.cellsTree.getCellAt(col, row);\r\n    }\r\n\r\n    public addCell(col: number, row: number): BoardCell {\r\n        const cell = new BoardCell(col, row, this.cellSize, this);\r\n        this.cellsTree.addCell(cell);\r\n\r\n        return cell;\r\n    }\r\n\r\n    public alignWithCell(col: number, row: number, object: Sprite) {\r\n        const x0 = col * this.cellSize;\r\n        const y0 = row * this.cellSize;\r\n\r\n        const w = object.width;\r\n        const h = object.height;\r\n\r\n        object.x = x0 + (this.cellSize - w) / 2;\r\n        object.y = y0 + (this.cellSize - h) / 2;\r\n    }\r\n\r\n}","import { Sprite } from 'pixi.js';\r\nimport BoxCollider from '../collision/colliders/BoxCollider';\r\nimport { HasCollider } from '../collision/HasCollider';\r\nimport Rectangle from '../collision/shapes/Rectangle';\r\nimport { Renderable } from '../Renderable';\r\nimport Resources from '../Resources';\r\nimport Board from './Board';\r\n\r\nexport class BoardCell implements Renderable, HasCollider {\r\n\r\n    private readonly sprite: Sprite;\r\n    private readonly board: Board;\r\n    private _isWall = false;\r\n\r\n    public readonly col: number;\r\n    public readonly row: number;\r\n    public readonly collider: BoxCollider;\r\n\r\n    public constructor(col: number, row: number, size: number, board: Board) {\r\n        this.board = board;\r\n        this.col = col;\r\n        this.row = row;\r\n\r\n        const x0 = col * size;\r\n        const y0 = row * size;\r\n        const x1 = x0 + size;\r\n        const y1 = y0 + size;\r\n\r\n        this.sprite = new Sprite(Resources.GRASS_TEXTURE);\r\n        this.collider = new BoxCollider(Rectangle.fromCoords(x0, y0, x1, y1));\r\n\r\n        this.sprite.width = size;\r\n        this.sprite.height = size;\r\n        this.sprite.x = x0;\r\n        this.sprite.y = y0;\r\n    }\r\n\r\n    public get neighbors(): BoardCell[] {\r\n        return [\r\n            this.board.getCellAt(this.col - 0, this.row - 1),\r\n            this.board.getCellAt(this.col - 1, this.row - 1),\r\n            this.board.getCellAt(this.col - 1, this.row - 0),\r\n            this.board.getCellAt(this.col - 1, this.row + 1),\r\n            this.board.getCellAt(this.col - 0, this.row + 1),\r\n            this.board.getCellAt(this.col + 1, this.row + 1),\r\n            this.board.getCellAt(this.col + 1, this.row - 0),\r\n            this.board.getCellAt(this.col + 1, this.row - 1),\r\n        ].filter(cell => !!cell);\r\n    }\r\n\r\n    public get hash() {\r\n        return this.col + '#' + this.row;\r\n    }\r\n\r\n    public get renderable() {\r\n        return this.sprite;\r\n    }\r\n\r\n    public get isWall() {\r\n        return this._isWall;\r\n    }\r\n\r\n    public get wCell() {\r\n        return this.board.getCellAt(this.col - 1, this.row);\r\n    }\r\n\r\n    public get wMove() {\r\n        return this.eCell?.isWall === false;\r\n    }\r\n\r\n    public get sCell() {\r\n        return this.board.getCellAt(this.col, this.row - 1);\r\n    }\r\n\r\n    public get sMove() {\r\n        return this.eCell?.isWall === false;\r\n    }\r\n\r\n    public get eCell() {\r\n        return this.board.getCellAt(this.col + 1, this.row);\r\n    }\r\n\r\n    public get eMove() {\r\n        return this.eCell?.isWall === false;\r\n    }\r\n\r\n    public get nCell() {\r\n        return this.board.getCellAt(this.col, this.row + 1);\r\n    }\r\n\r\n    public get nMove() {\r\n        return this.nCell?.isWall === false;\r\n    }\r\n\r\n    public get nwCell() {\r\n        return this.board.getCellAt(this.col - 1, this.row - 1);\r\n    }\r\n\r\n    public get nwMove() {\r\n        return (\r\n            this.nwCell?.isWall === false &&\r\n            this.nCell?.isWall === false &&\r\n            this.wCell?.isWall === false\r\n        );\r\n    }\r\n\r\n    public get swCell() {\r\n        return this.board.getCellAt(this.col - 1, this.row + 1);\r\n    }\r\n\r\n    public get swMove() {\r\n        return (\r\n            this.swCell?.isWall === false &&\r\n            this.sCell?.isWall === false &&\r\n            this.wCell?.isWall === false\r\n        );\r\n    }\r\n\r\n    public get seCell() {\r\n        return this.board.getCellAt(this.col + 1, this.row + 1);\r\n    }\r\n\r\n    public get seMove() {\r\n        return (\r\n            this.seCell?.isWall === false &&\r\n            this.sCell?.isWall === false &&\r\n            this.eCell?.isWall === false\r\n        );\r\n    }\r\n\r\n    public get neCell() {\r\n        return this.board.getCellAt(this.col + 1, this.row - 1);\r\n    }\r\n\r\n    public get neMove() {\r\n        return (\r\n            this.neCell?.isWall === false &&\r\n            this.nCell?.isWall === false &&\r\n            this.eCell?.isWall === false\r\n        );\r\n    }\r\n\r\n    public setAsWall(isDestroyable = false) {\r\n        this._isWall = true;\r\n        this.sprite.texture = Resources.WALL_TEXTURE;\r\n    }\r\n\r\n    public setAsGrass() {\r\n        this.sprite.texture = Resources.GRASS_TEXTURE;\r\n    }\r\n\r\n    public setAsWood() {\r\n        this.sprite.texture = Resources.WOOD_TEXTURE;\r\n    }\r\n\r\n}","import { Collider } from '../collision/Collider';\r\nimport RBush from 'rbush';\r\nimport { BoardCell } from './BoardCell';\r\nimport Rectangle from '../collision/shapes/Rectangle';\r\nimport BoxCollider from '../collision/colliders/BoxCollider';\r\n\r\ntype OnCellAddListener = (cell: BoardCell) => void;\r\ntype OnCellRemoveListener = (cell: BoardCell) => void;\r\n\r\nexport default class BoardCellsTree implements Collider {\r\n\r\n    private cellsTree: Tree = new Tree();\r\n    private cellsMap: Map<string, BoardCell> = new Map();\r\n    private onCellAddListener: OnCellAddListener;\r\n    private onCellRemoveListener: OnCellRemoveListener;\r\n\r\n    public constructor(\r\n        onAddListener: OnCellAddListener,\r\n        onRemoveListener: OnCellRemoveListener\r\n    ) {\r\n        this.onCellAddListener = onAddListener;\r\n        this.onCellRemoveListener = onRemoveListener;\r\n    }\r\n\r\n    public testCollision(other: Collider): boolean {\r\n        if (other instanceof BoxCollider) {\r\n            return !!this.findIntersection(other.box).find(cell => {\r\n                if (cell.isWall) {\r\n                    const f1 = other.box.intersectionFactorX(cell.collider.box);\r\n                    const f2 = other.box.intersectionFactorY(cell.collider.box);\r\n\r\n                    console.log(f1, f2);\r\n\r\n                    return (f1 > 0.01 && f2 > 0.01);\r\n                } else {\r\n                    return false;\r\n                }\r\n                return cell.isWall;\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public findIntersection(queryRect: Rectangle): BoardCell[] {\r\n        const { x0, y0, x1, y1 } = queryRect;\r\n\r\n        return this.cellsTree.search({\r\n            minX: x0, minY: y0,\r\n            maxX: x1, maxY: y1\r\n        });\r\n    }\r\n\r\n    public getCellAt(col: number, row: number) {\r\n        return this.cellsMap.get(this.getMapKey(col, row));\r\n    }\r\n\r\n    public addCell(cell: BoardCell) {\r\n        const { row, col } = cell;\r\n        const key = this.getMapKey(col, row);\r\n\r\n        if (this.cellsMap.has(key)) {\r\n            const oldCell = this.cellsMap.get(key);\r\n            this.cellsTree.remove(oldCell);\r\n            this.onCellRemoveListener(oldCell);\r\n        }\r\n\r\n        this.cellsMap.set(key, cell);\r\n        this.cellsTree.insert(cell);\r\n        this.onCellAddListener(cell);\r\n    }\r\n\r\n    public getNonWallCells() {\r\n        return [...this.cellsMap.values()].filter(cell => !cell.isWall);\r\n    }\r\n\r\n    private getMapKey(col: number, row: number) {\r\n        return col + '#' + row;\r\n    }\r\n\r\n}\r\n\r\nclass Tree extends RBush<BoardCell> {\r\n\r\n    public toBBox(cell: BoardCell) {\r\n        const { x0, y0, x1, y1 } = cell.collider.box;\r\n\r\n        return { minX: x0, minY: y0, maxX: x1, maxY: y1 };\r\n    }\r\n\r\n    public compareMinX(a: BoardCell, b: BoardCell): number {\r\n        return a.collider.box.p1.x - b.collider.box.p1.x;\r\n    }\r\n\r\n    public compareMinY(a: BoardCell, b: BoardCell): number {\r\n        return a.collider.box.p2.x - b.collider.box.p2.x;\r\n    }\r\n\r\n}","import { CollisionTest } from './CollisionTest';\r\nimport { Collider } from './Collider';\r\n\r\nexport abstract class AbstractCollider implements Collider {\r\n\r\n    public testCollision(other: AbstractCollider): boolean {\r\n        return this.getCollisionTest(other)?.testCollision() ?? false;\r\n    }\r\n\r\n    public abstract getCollisionTest(other: AbstractCollider): CollisionTest;\r\n\r\n}","import Rectangle from '../shapes/Rectangle';\r\nimport BoxBoxCollisionTest from '../tests/BoxBoxCollisionTest';\r\nimport { CollisionTest } from '../CollisionTest';\r\nimport { AbstractCollider } from '../AbstractCollider';\r\n\r\nexport default class BoxCollider extends AbstractCollider {\r\n\r\n    public readonly box: Rectangle;\r\n\r\n    public constructor(box: Rectangle) {\r\n        super();\r\n        this.box = box;\r\n    }\r\n\r\n    public getCollisionTest(other: AbstractCollider): CollisionTest {\r\n        if (other instanceof BoxCollider) {\r\n            return new BoxBoxCollisionTest(this, other);\r\n        }\r\n    }\r\n\r\n}","export default class Point {\r\n\r\n    public readonly x: number;\r\n    public readonly y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n}","import Point from './Point';\r\n\r\nexport default class Rectangle {\r\n\r\n    public readonly p1: Point;\r\n    public readonly p2: Point;\r\n\r\n    public constructor(p1: Point, p2: Point) {\r\n        this.p1 = p1;\r\n        this.p2 = p2;\r\n    }\r\n\r\n    public get x0() {\r\n        return this.p1.x;\r\n    }\r\n\r\n    public get y0() {\r\n        return this.p1.y;\r\n    }\r\n\r\n    public get x1() {\r\n        return this.p2.x;\r\n    }\r\n\r\n    public get y1() {\r\n        return this.p2.y;\r\n    }\r\n\r\n    public shift(dx: number, dy: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return Rectangle.fromCoords(x0 + dx, y0 + dy, x1 + dx, y1 + dy);\r\n    }\r\n\r\n    public shiftX(dx: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return Rectangle.fromCoords(x0 + dx, y0, x1 + dx, y1);\r\n    }\r\n\r\n    public shiftY(dy: number) {\r\n        const { x0, y0, x1, y1 } = this;\r\n        return Rectangle.fromCoords(x0, y0 + dy, x1, y1 + dy);\r\n    }\r\n\r\n    public intersectsRect(rect: Rectangle): boolean {\r\n        // If one rectangle is on left side of other\r\n        if (this.p1.x > rect.p2.x || rect.p1.x > this.p2.x) {\r\n            return false;\r\n        }\r\n\r\n        // If one rectangle is above other\r\n        if (this.p2.y > rect.p1.y || rect.p2.y > this.p1.y) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public intersectionFactorX(rect: Rectangle): number {\r\n        return Math.min(Math.abs(rect.p2.x - this.p1.x), Math.abs(this.p2.x - rect.p1.x));\r\n    }\r\n\r\n    public intersectionFactorY(rect: Rectangle): number {\r\n        return Math.min(Math.abs(rect.p2.y - this.p1.y), Math.abs(this.p2.y - rect.p1.y));\r\n    }\r\n\r\n    public static fromCoords(x0: number, y0: number, x1: number, y1: number) {\r\n        return new Rectangle(new Point(x0, y0), new Point(x1, y1));\r\n    }\r\n\r\n    public static fromSize(x0: number, y0: number, size: number) {\r\n        return new Rectangle(new Point(x0, y0), new Point(x0 + size, y0 + size));\r\n    }\r\n\r\n}","import BoxCollider from '../colliders/BoxCollider';\r\nimport { CollisionTest } from '../CollisionTest';\r\n\r\nexport default class BoxBoxCollisionTest implements CollisionTest {\r\n\r\n    private b1: BoxCollider;\r\n    private b2: BoxCollider;\r\n\r\n    public constructor(b1: BoxCollider, b2: BoxCollider) {\r\n        this.b1 = b1;\r\n        this.b2 = b2;\r\n    }\r\n\r\n    public testCollision(): boolean {\r\n        return this.b1.box.intersectsRect(this.b2.box);\r\n    }\r\n\r\n}","import { ISpritesheetData, SCALE_MODES, Spritesheet, Texture } from 'pixi.js';\r\n\r\nexport const loadTexture = (url: string) => {\r\n    return Texture.from(url, {\r\n        scaleMode: SCALE_MODES.NEAREST\r\n    });\r\n};\r\n\r\nexport const loadSpritesheet = async (atlasFilepath: string, sheetData: ISpritesheetData) => {\r\n    const sheet = new Spritesheet(Texture.from(atlasFilepath, {\r\n        scaleMode: SCALE_MODES.NEAREST\r\n    }), sheetData);\r\n\r\n    return await new Promise<Spritesheet>(resolve => {\r\n        sheet.parse(() => resolve(sheet));\r\n    });\r\n};","import Board from '../board/Board';\r\nimport { BoardCell } from '../board/BoardCell';\r\n\r\nexport default class LevelLoader {\r\n\r\n    public static load(level: ILevelDefinition) {\r\n        const blocks = level.blocks.map(b => this.parseBlock(b));\r\n        const board = new Board();\r\n\r\n        blocks.forEach(block => {\r\n            for (let col = block.x0; col <= block.x1; col++) {\r\n                for (let row = block.y0; row <= block.y1; row++) {\r\n                    const cell = board.addCell(col, row);\r\n\r\n                    switch (block.type) {\r\n                        case 'grass': {\r\n                            cell.setAsGrass();\r\n                            break;\r\n                        }\r\n                        case 'wall': {\r\n                            cell.setAsWall();\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        return board;\r\n    }\r\n\r\n    private static parseBlock(blockDef: IBlockDefinition) {\r\n        const coordsSplit = blockDef.coords.split(':');\r\n        const c0 = coordsSplit[0].split(',');\r\n\r\n        const x0 = Math.max(Math.round(+c0[0]), 1) - 1;\r\n        const y0 = Math.max(Math.round(+c0[1]), 1) - 1;\r\n        let x1 = x0;\r\n        let y1 = y0;\r\n\r\n        if (coordsSplit.length > 1) {\r\n            const c1 = coordsSplit[1].split(',');\r\n            x1 = Math.max(Math.round(+c1[0]), 1) - 1;\r\n            y1 = Math.max(Math.round(+c1[1]), 1) - 1;\r\n        }\r\n\r\n        return { x0, y0, x1, y1, type: blockDef.type };\r\n    }\r\n\r\n}\r\n\r\nexport interface ILevelDefinition {\r\n    blocks: IBlockDefinition[]\r\n}\r\n\r\nexport interface IBlockDefinition {\r\n    coords: string;\r\n    type: 'grass' | 'wall';\r\n}","import { AnimatedSprite } from 'pixi.js';\r\nimport { BoardCell } from '../board/BoardCell';\r\nimport Resources from '../Resources';\r\nimport Weapon from './Weapon';\r\n\r\nexport default class Dynamite extends Weapon {\r\n\r\n    private readonly baseRange = 4;\r\n\r\n    public spawnAt(cell: BoardCell): void {\r\n        setTimeout(() => {\r\n            const explosionsDelayMs = 60;\r\n            const c0 = cell.col;\r\n            const r0 = cell.row;\r\n\r\n            let l = 1;\r\n            let b = 1;\r\n            let r = 1;\r\n            let t = 1;\r\n\r\n            const sprites: AnimatedSprite[] = [];\r\n\r\n            this.game.app.stage.addChild(this.getExplosionSprite(c0, r0, this.game.board.cellSize));\r\n\r\n            for (let i = 0; i < this.baseRange; i++) {\r\n                setTimeout(() => {\r\n                    // top\r\n                    if (this.game.board.getCellAt(c0, r0 + t)?.isWall === false) {\r\n                        this.game.app.stage.addChild(this.getExplosionSprite(c0, r0 + t, this.game.board.cellSize));\r\n                        t++;\r\n                    }\r\n\r\n                    // right\r\n                    if (this.game.board.getCellAt(c0 + r, r0)?.isWall === false) {\r\n                        this.game.app.stage.addChild(this.getExplosionSprite(c0 + r, r0, this.game.board.cellSize));\r\n                        r++;\r\n                    }\r\n\r\n                    // bottom\r\n                    if (this.game.board.getCellAt(c0, r0 - b)?.isWall === false) {\r\n                        this.game.app.stage.addChild(this.getExplosionSprite(c0, r0 - b, this.game.board.cellSize));\r\n                        b++;\r\n                    }\r\n\r\n                    // left\r\n                    if (this.game.board.getCellAt(c0 - l, r0)?.isWall === false) {\r\n                        this.game.app.stage.addChild(this.getExplosionSprite(c0 - l, r0, this.game.board.cellSize));\r\n                        l++;\r\n                    }\r\n                }, i * explosionsDelayMs);\r\n            }\r\n\r\n        }, 1000);\r\n    }\r\n\r\n    private getExplosionSprite(col: number, row: number, cellSize: number) {\r\n        const sprite = new AnimatedSprite(Resources.EXPLOSION_SPRITESHEET.animations['explosion']);\r\n        sprite.width = cellSize;\r\n        sprite.height = cellSize;\r\n        sprite.x = col * cellSize;\r\n        sprite.y = row * cellSize;\r\n\r\n        sprite.animationSpeed = 0.3;\r\n        sprite.loop = false;\r\n\r\n        sprite.play();\r\n\r\n        return sprite;\r\n    }\r\n\r\n}","import { ShockwaveFilter } from '@pixi/filter-shockwave';\r\nimport { BoardCell } from '../board/BoardCell';\r\nimport Dynamite from './Dynamite';\r\nimport RingBomb from './RingBomb';\r\nimport Weapon from './Weapon';\r\n\r\nexport default class MortarBomb extends Weapon {\r\n\r\n    public spawnAt(cell: BoardCell): void {\r\n        const mainBomb = new RingBomb(this.game, { radius: 8, propagationDelay: 200 });\r\n\r\n        const wave = new ShockwaveFilter([cell.col * 32, cell.row * 32], {\r\n            radius: 400,\r\n            amplitude: 15,\r\n            brightness: 1.5\r\n        });\r\n\r\n        this.game.app.stage.filters = [wave];\r\n\r\n        this.game.app.ticker.add(delta => {\r\n            wave.time += 0.01;\r\n        });\r\n\r\n        mainBomb.spawnAt(cell);\r\n\r\n        const nonWallCells = this.game.board.cellsTree.getNonWallCells();\r\n        const maxLength = nonWallCells.length - 1;\r\n\r\n        setTimeout(() => {\r\n            for (let i = 0; i < 4; i++) {\r\n                const index = Math.min(Math.round(Math.random() * maxLength), maxLength);\r\n                const cell = nonWallCells[index];\r\n\r\n                console.log(index);\r\n\r\n                new Dynamite(this.game).spawnAt(cell);\r\n                // new RingBomb(this.game, { radius: 2, delay: 0 }).spawnAt(cell);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n}\r\n","import { AnimatedSprite } from 'pixi.js';\r\nimport { BoardCell } from '../board/BoardCell';\r\nimport BresenhamCircle from '../Bresenham';\r\nimport Game from '../Game';\r\nimport Resources from '../Resources';\r\nimport Weapon from './Weapon';\r\n\r\nexport interface IRingBombProps {\r\n    radius?: number,\r\n    delay?: number,\r\n    propagationDelay?: number;\r\n}\r\n\r\nexport default class RingBomb extends Weapon {\r\n\r\n    private readonly radius: number;\r\n    private readonly delay: number;\r\n    private readonly propagationDelay: number;\r\n\r\n    public constructor(game: Game, props?: IRingBombProps) {\r\n        super(game);\r\n\r\n        this.radius = props?.radius ?? 5;\r\n        this.delay = props?.delay ?? 1000;\r\n        this.propagationDelay = props?.propagationDelay ?? 300;\r\n    }\r\n\r\n    public spawnAt(cell: BoardCell): void {\r\n        setTimeout(() => {\r\n\r\n            for (let i = 0; i < this.radius; i++) {\r\n                setTimeout(() => {\r\n                    const ring = BresenhamCircle.getOutline(cell.col, cell.row, i + 1);\r\n                    ring.forEach(([col, row]) => {\r\n                        const sprite = this.getExplosionSprite(col, row, this.game.board.cellSize);\r\n                        this.game.app.stage.addChild(sprite);\r\n                    });\r\n                }, i * this.propagationDelay);\r\n            }\r\n\r\n        }, this.delay);\r\n    }\r\n\r\n    private getExplosionSprite(col: number, row: number, cellSize: number) {\r\n        const sprite = new AnimatedSprite(Resources.EXPLOSION_SPRITESHEET.animations['explosion']);\r\n        sprite.width = cellSize;\r\n        sprite.height = cellSize;\r\n        sprite.x = col * cellSize;\r\n        sprite.y = row * cellSize;\r\n\r\n        sprite.animationSpeed = 0.3;\r\n        sprite.loop = false;\r\n\r\n        sprite.play();\r\n\r\n        return sprite;\r\n    }\r\n\r\n}","import Board from '../board/Board';\r\nimport { BoardCell } from '../board/BoardCell';\r\nimport Game from '../Game';\r\n\r\nexport default abstract class Weapon {\r\n\r\n    protected readonly game: Game;\r\n\r\n    public constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    // todo przekazanie powerup'ów\r\n    public abstract spawnAt(cell: BoardCell): void;\r\n\r\n}","import Game from './game/Game';\r\nimport './index.scss';\r\n\r\nconst game = new Game();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkbomberman\"] = globalThis[\"webpackChunkbomberman\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_pixi_filter-shockwave_dist_filter-shockwave_esm_js-node_modules_heap_ind-bba7ca\"], () => (__webpack_require__(\"./src/index.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}